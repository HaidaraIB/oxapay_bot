from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes, CallbackQueryHandler
from telegram.constants import ChatMemberStatus
from common.keyboards import build_user_keyboard
import os


async def check_if_user_member(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_member = await context.bot.get_chat_member(
        chat_id=int(os.getenv("CHANNEL_ID")), user_id=update.effective_user.id
    )
    if chat_member.status == ChatMemberStatus.LEFT:
        text = (
            f"Ù„Ø¨Ø¯Ø¡ Ø§Ø³ØªØ®Ø¯Ø§Ù… Ø§Ù„Ø¨ÙˆØª ÙŠØ¬Ø¨ Ø¹Ù„ÙŠÙƒ Ø§Ù„Ø§Ù†Ø¶Ù…Ø§Ù… Ø§Ù„Ù‰ Ù‚Ù†Ø§Ø© Ø§Ù„Ø¨ÙˆØª Ø£ÙˆÙ„Ø§Ù‹.\n\n"
            "âœ… Ø§Ø´ØªØ±Ùƒ Ø£ÙˆÙ„Ø§Ù‹ ðŸ‘‡.\n"
            f"ðŸ”— {os.getenv('CHANNEL_LINK')}\n\n"
            "Ø«Ù… Ø§Ø¶ØºØ· ØªØ­Ù‚Ù‚âœ…"
        )
        markup = InlineKeyboardMarkup.from_button(
            InlineKeyboardButton(text="ØªØ­Ù‚Ù‚âœ…", callback_data="check joined")
        )
        if update.callback_query:
            await update.callback_query.edit_message_text(
                text=text, reply_markup=markup
            )
        else:
            await update.message.reply_text(text=text, reply_markup=markup)
        return False
    return True


async def check_joined(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_memeber = await context.bot.get_chat_member(
        chat_id=int(os.getenv("CHANNEL_ID")), user_id=update.effective_user.id
    )
    if chat_memeber.status == ChatMemberStatus.LEFT:
        await update.callback_query.answer(
            text="Ù‚Ù… Ø¨Ø§Ù„Ø§Ø´ØªØ±Ø§Ùƒ Ø¨Ø§Ù„Ù‚Ù†Ø§Ø© Ø£ÙˆÙ„Ø§Ù‹", show_alert=True
        )
        return

    await update.callback_query.edit_message_text(
        text="Ø£Ù‡Ù„Ø§Ù‹ Ø¨Ùƒ...",
        reply_markup=build_user_keyboard(),
    )


check_joined_handler = CallbackQueryHandler(
    callback=check_joined, pattern="^check joined$"
)
